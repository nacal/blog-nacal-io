import { ImageResponse } from '@vercel/og'
import { NextRequest } from 'next/server'

export const config = {
  runtime: 'edge',
}

const og = async (req: NextRequest) => {
  const fontData = await fetch(new URL('../../public/Roboto-Bold.ttf', import.meta.url)).then((res) =>
    res.arrayBuffer()
  )

  try {
    const { searchParams } = new URL(req.url)
    const title = searchParams.get('title')?.slice(0, 100) ?? ''
    const description = searchParams.get('description')
    const isTop = description === 'nacal.io'
    const backgroundImageUrl = isTop
      ? 'url(/images/ogp-top.png)'
      : `url(${`data:image/svg+xml,${encodeURIComponent(
          '<svg width="1200" height="630" viewBox="0 0 1200 630" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_1_2)"><rect width="1200" height="630" fill="white"/><path d="M531.477 553.895V637H503.352V531.336H529.719L531.477 553.895ZM527.375 580.457H519.758C519.758 572.645 520.767 565.613 522.785 559.363C524.803 553.048 527.635 547.677 531.281 543.25C534.927 538.758 539.257 535.34 544.27 532.996C549.348 530.587 555.012 529.383 561.262 529.383C566.21 529.383 570.734 530.099 574.836 531.531C578.938 532.964 582.453 535.242 585.383 538.367C588.378 541.492 590.656 545.626 592.219 550.77C593.846 555.913 594.66 562.195 594.66 569.617V637H566.34V569.52C566.34 564.832 565.689 561.186 564.387 558.582C563.085 555.978 561.164 554.155 558.625 553.113C556.151 552.007 553.091 551.453 549.445 551.453C545.669 551.453 542.382 552.202 539.582 553.699C536.848 555.197 534.569 557.28 532.746 559.949C530.988 562.553 529.654 565.613 528.742 569.129C527.831 572.645 527.375 576.421 527.375 580.457ZM673.078 613.172V566.102C673.078 562.716 672.525 559.819 671.418 557.41C670.311 554.936 668.586 553.016 666.242 551.648C663.964 550.281 661.001 549.598 657.355 549.598C654.23 549.598 651.529 550.151 649.25 551.258C646.971 552.299 645.214 553.829 643.977 555.848C642.74 557.801 642.121 560.112 642.121 562.781H613.996C613.996 558.289 615.038 554.025 617.121 549.988C619.204 545.952 622.232 542.404 626.203 539.344C630.174 536.219 634.895 533.777 640.363 532.02C645.897 530.262 652.082 529.383 658.918 529.383C667.121 529.383 674.413 530.75 680.793 533.484C687.173 536.219 692.186 540.32 695.832 545.789C699.543 551.258 701.398 558.094 701.398 566.297V611.512C701.398 617.306 701.757 622.059 702.473 625.77C703.189 629.415 704.23 632.605 705.598 635.34V637H677.18C675.812 634.135 674.771 630.555 674.055 626.258C673.404 621.896 673.078 617.534 673.078 613.172ZM676.789 572.645L676.984 588.562H661.262C657.551 588.562 654.328 588.986 651.594 589.832C648.859 590.678 646.613 591.883 644.855 593.445C643.098 594.943 641.796 596.701 640.949 598.719C640.168 600.737 639.777 602.951 639.777 605.359C639.777 607.768 640.331 609.949 641.438 611.902C642.544 613.79 644.139 615.288 646.223 616.395C648.306 617.436 650.747 617.957 653.547 617.957C657.779 617.957 661.457 617.111 664.582 615.418C667.707 613.725 670.116 611.642 671.809 609.168C673.566 606.694 674.478 604.35 674.543 602.137L681.965 614.051C680.923 616.72 679.491 619.487 677.668 622.352C675.91 625.216 673.664 627.918 670.93 630.457C668.195 632.931 664.908 634.982 661.066 636.609C657.225 638.172 652.668 638.953 647.395 638.953C640.689 638.953 634.602 637.618 629.133 634.949C623.729 632.215 619.432 628.471 616.242 623.719C613.117 618.901 611.555 613.432 611.555 607.312C611.555 601.779 612.596 596.863 614.68 592.566C616.763 588.27 619.823 584.656 623.859 581.727C627.961 578.732 633.072 576.486 639.191 574.988C645.311 573.426 652.408 572.645 660.48 572.645H676.789ZM766.73 616.98C770.181 616.98 773.241 616.329 775.91 615.027C778.579 613.66 780.663 611.772 782.16 609.363C783.723 606.889 784.536 603.992 784.602 600.672H811.066C811.001 608.094 809.016 614.702 805.109 620.496C801.203 626.225 795.962 630.75 789.387 634.07C782.811 637.326 775.454 638.953 767.316 638.953C759.113 638.953 751.952 637.586 745.832 634.852C739.777 632.117 734.732 628.341 730.695 623.523C726.659 618.641 723.632 612.977 721.613 606.531C719.595 600.021 718.586 593.055 718.586 585.633V582.801C718.586 575.314 719.595 568.348 721.613 561.902C723.632 555.392 726.659 549.728 730.695 544.91C734.732 540.027 739.777 536.219 745.832 533.484C751.887 530.75 758.983 529.383 767.121 529.383C775.78 529.383 783.365 531.043 789.875 534.363C796.451 537.684 801.594 542.436 805.305 548.621C809.081 554.741 811.001 562 811.066 570.398H784.602C784.536 566.883 783.788 563.693 782.355 560.828C780.988 557.964 778.97 555.685 776.301 553.992C773.697 552.234 770.474 551.355 766.633 551.355C762.531 551.355 759.178 552.234 756.574 553.992C753.97 555.685 751.952 558.029 750.52 561.023C749.087 563.953 748.078 567.306 747.492 571.082C746.971 574.793 746.711 578.699 746.711 582.801V585.633C746.711 589.734 746.971 593.673 747.492 597.449C748.013 601.225 748.99 604.578 750.422 607.508C751.919 610.438 753.97 612.749 756.574 614.441C759.178 616.134 762.564 616.98 766.73 616.98ZM884.406 613.172V566.102C884.406 562.716 883.853 559.819 882.746 557.41C881.639 554.936 879.914 553.016 877.57 551.648C875.292 550.281 872.329 549.598 868.684 549.598C865.559 549.598 862.857 550.151 860.578 551.258C858.299 552.299 856.542 553.829 855.305 555.848C854.068 557.801 853.449 560.112 853.449 562.781H825.324C825.324 558.289 826.366 554.025 828.449 549.988C830.533 545.952 833.56 542.404 837.531 539.344C841.503 536.219 846.223 533.777 851.691 532.02C857.225 530.262 863.41 529.383 870.246 529.383C878.449 529.383 885.741 530.75 892.121 533.484C898.501 536.219 903.514 540.32 907.16 545.789C910.871 551.258 912.727 558.094 912.727 566.297V611.512C912.727 617.306 913.085 622.059 913.801 625.77C914.517 629.415 915.559 632.605 916.926 635.34V637H888.508C887.141 634.135 886.099 630.555 885.383 626.258C884.732 621.896 884.406 617.534 884.406 613.172ZM888.117 572.645L888.312 588.562H872.59C868.879 588.562 865.656 588.986 862.922 589.832C860.188 590.678 857.941 591.883 856.184 593.445C854.426 594.943 853.124 596.701 852.277 598.719C851.496 600.737 851.105 602.951 851.105 605.359C851.105 607.768 851.659 609.949 852.766 611.902C853.872 613.79 855.467 615.288 857.551 616.395C859.634 617.436 862.076 617.957 864.875 617.957C869.107 617.957 872.785 617.111 875.91 615.418C879.035 613.725 881.444 611.642 883.137 609.168C884.895 606.694 885.806 604.35 885.871 602.137L893.293 614.051C892.251 616.72 890.819 619.487 888.996 622.352C887.238 625.216 884.992 627.918 882.258 630.457C879.523 632.931 876.236 634.982 872.395 636.609C868.553 638.172 863.996 638.953 858.723 638.953C852.017 638.953 845.93 637.618 840.461 634.949C835.057 632.215 830.76 628.471 827.57 623.719C824.445 618.901 822.883 613.432 822.883 607.312C822.883 601.779 823.924 596.863 826.008 592.566C828.091 588.27 831.151 584.656 835.188 581.727C839.289 578.732 844.4 576.486 850.52 574.988C856.639 573.426 863.736 572.645 871.809 572.645H888.117ZM964.094 487V637H935.871V487H964.094ZM988.703 623.426C988.703 619.259 990.135 615.776 993 612.977C995.93 610.177 999.803 608.777 1004.62 608.777C1009.44 608.777 1013.28 610.177 1016.14 612.977C1019.07 615.776 1020.54 619.259 1020.54 623.426C1020.54 627.592 1019.07 631.076 1016.14 633.875C1013.28 636.674 1009.44 638.074 1004.62 638.074C999.803 638.074 995.93 636.674 993 633.875C990.135 631.076 988.703 627.592 988.703 623.426ZM1075.03 531.336V637H1046.81V531.336H1075.03ZM1045.05 503.797C1045.05 499.695 1046.48 496.31 1049.35 493.641C1052.21 490.971 1056.05 489.637 1060.87 489.637C1065.62 489.637 1069.43 490.971 1072.3 493.641C1075.23 496.31 1076.69 499.695 1076.69 503.797C1076.69 507.898 1075.23 511.284 1072.3 513.953C1069.43 516.622 1065.62 517.957 1060.87 517.957C1056.05 517.957 1052.21 516.622 1049.35 513.953C1046.48 511.284 1045.05 507.898 1045.05 503.797ZM1093.78 585.242V583.191C1093.78 575.444 1094.89 568.315 1097.1 561.805C1099.32 555.229 1102.54 549.533 1106.77 544.715C1111 539.897 1116.21 536.154 1122.39 533.484C1128.58 530.75 1135.68 529.383 1143.68 529.383C1151.69 529.383 1158.82 530.75 1165.07 533.484C1171.32 536.154 1176.56 539.897 1180.79 544.715C1185.09 549.533 1188.35 555.229 1190.56 561.805C1192.77 568.315 1193.88 575.444 1193.88 583.191V585.242C1193.88 592.924 1192.77 600.053 1190.56 606.629C1188.35 613.139 1185.09 618.836 1180.79 623.719C1176.56 628.536 1171.35 632.28 1165.17 634.949C1158.98 637.618 1151.89 638.953 1143.88 638.953C1135.87 638.953 1128.74 637.618 1122.49 634.949C1116.31 632.28 1111.07 628.536 1106.77 623.719C1102.54 618.836 1099.32 613.139 1097.1 606.629C1094.89 600.053 1093.78 592.924 1093.78 585.242ZM1121.91 583.191V585.242C1121.91 589.669 1122.3 593.803 1123.08 597.645C1123.86 601.486 1125.1 604.871 1126.79 607.801C1128.55 610.665 1130.83 612.911 1133.62 614.539C1136.42 616.167 1139.84 616.98 1143.88 616.98C1147.79 616.98 1151.14 616.167 1153.94 614.539C1156.74 612.911 1158.98 610.665 1160.68 607.801C1162.37 604.871 1163.61 601.486 1164.39 597.645C1165.23 593.803 1165.66 589.669 1165.66 585.242V583.191C1165.66 578.895 1165.23 574.858 1164.39 571.082C1163.61 567.241 1162.34 563.855 1160.58 560.926C1158.89 557.931 1156.64 555.587 1153.84 553.895C1151.04 552.202 1147.65 551.355 1143.68 551.355C1139.71 551.355 1136.33 552.202 1133.53 553.895C1130.79 555.587 1128.55 557.931 1126.79 560.926C1125.1 563.855 1123.86 567.241 1123.08 571.082C1122.3 574.858 1121.91 578.895 1121.91 583.191Z" fill="black"/></g><defs><clipPath id="clip0_1_2"><rect width="1200" height="630" fill="white"/></clipPath></defs></svg>'
        )}`})`

    return (
      new ImageResponse(
        (
          <>
            <div
              style={{
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
                width: '1200px',
                height: '630px',
                backgroundColor: 'white',
                fontSize: '40px',
                backgroundImage: backgroundImageUrl,
                backgroundRepeat: 'no-repeat',
                backgroundPosition: 'center',
                backgroundSize: '100% 100%',
              }}
            >
              {!isTop && title}
            </div>
          </>
        )
      ),
      {
        width: 1200,
        height: 630,
        fonts: [
          {
            name: 'Roboto',
            data: fontData,
            weight: 700,
            style: 'normal',
          },
        ],
      }
    )
  } catch (e) {
    if (e instanceof Error) {
      console.error(e.message)
    }
    return new Response(`Failed to generate the image`, {
      status: 500,
    })
  }
}

export default og
